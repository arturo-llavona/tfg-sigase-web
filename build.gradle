plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.github.lkishalmi.gatling" version "3.3.4"
	id 'java'
}
group = 'com.allavona.tfg'
version = '1.0.2'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	implementation 'io.swagger:swagger-annotations:1.6.8'
	implementation "com.google.code.findbugs:jsr305:3.0.2"
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'
	implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
	implementation 'com.google.code.gson:gson:2.9.1'
	implementation 'io.gsonfire:gson-fire:1.8.5'
	implementation 'javax.ws.rs:jsr311-api:1.1.1'
	implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	implementation "jakarta.annotation:jakarta.annotation-api:1.3.5"

	implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testCompileOnly 'org.projectlombok:lombok:1.18.26'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register("moveAssets") {
	// Store the build directory into a variable to avoid project reference in the configuration cache
	def dir = rootDir
	try {
		delete files("${dir}/src/main/resources/static/assets/")
	} catch (Exception e) {

	}
	try {
		doLast {
			ant.copy(todir: "${dir}/src/main/resources/static/assets/") {
				fileset(dir: "${dir}/src/main/resources/templates/private/assets/")
			}
		}
	} catch (Exception e) {

	}
}