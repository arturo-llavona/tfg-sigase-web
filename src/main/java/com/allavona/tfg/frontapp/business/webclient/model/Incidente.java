/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allavona.tfg.frontapp.business.webclient.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

import com.allavona.tfg.frontapp.business.webclient.JSON;

/**
 * Incidente
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-07T18:52:07.490553100+01:00[Europe/Madrid]")
public class Incidente {
  public static final String SERIALIZED_NAME_ID_INCIDENTE = "idIncidente";
  @SerializedName(SERIALIZED_NAME_ID_INCIDENTE)
  private Integer idIncidente;

  public static final String SERIALIZED_NAME_FECHA_CREACION = "fechaCreacion";
  @SerializedName(SERIALIZED_NAME_FECHA_CREACION)
  private OffsetDateTime fechaCreacion;

  public static final String SERIALIZED_NAME_FECHA_FINALIZACION = "fechaFinalizacion";
  @SerializedName(SERIALIZED_NAME_FECHA_FINALIZACION)
  private OffsetDateTime fechaFinalizacion;

  public static final String SERIALIZED_NAME_ALERTANTE = "alertante";
  @SerializedName(SERIALIZED_NAME_ALERTANTE)
  private String alertante;

  public static final String SERIALIZED_NAME_ALIAS = "alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  private String alias;

  public static final String SERIALIZED_NAME_LOCALIZACION_DESCRIPCION = "localizacionDescripcion";
  @SerializedName(SERIALIZED_NAME_LOCALIZACION_DESCRIPCION)
  private String localizacionDescripcion;

  public static final String SERIALIZED_NAME_LOCALIZACION_LONGITUD = "localizacionLongitud";
  @SerializedName(SERIALIZED_NAME_LOCALIZACION_LONGITUD)
  private String localizacionLongitud;

  public static final String SERIALIZED_NAME_LOCALIZACION_LATITUD = "localizacionLatitud";
  @SerializedName(SERIALIZED_NAME_LOCALIZACION_LATITUD)
  private String localizacionLatitud;

  public static final String SERIALIZED_NAME_OBSERVACIONES = "observaciones";
  @SerializedName(SERIALIZED_NAME_OBSERVACIONES)
  private List<Observacion> observaciones = null;

  public static final String SERIALIZED_NAME_PERSONA_AFECTADA = "personaAfectada";
  @SerializedName(SERIALIZED_NAME_PERSONA_AFECTADA)
  private IncidentePersonaAfectada personaAfectada;

  public static final String SERIALIZED_NAME_PLANTILLA_RECURSOS = "plantillaRecursos";
  @SerializedName(SERIALIZED_NAME_PLANTILLA_RECURSOS)
  private List<TipoRecurso> plantillaRecursos = null;

  public static final String SERIALIZED_NAME_RECURSOS = "recursos";
  @SerializedName(SERIALIZED_NAME_RECURSOS)
  private List<Recurso> recursos = null;

  public static final String SERIALIZED_NAME_CLASIFICACION_INCIDENTE = "clasificacionIncidente";
  @SerializedName(SERIALIZED_NAME_CLASIFICACION_INCIDENTE)
  private ClasificacionIncidente clasificacionIncidente;

  public Incidente() {
  }

  public Incidente idIncidente(Integer idIncidente) {
    
    this.idIncidente = idIncidente;
    return this;
  }

   /**
   * Get idIncidente
   * @return idIncidente
  **/
  @javax.annotation.Nullable

  public Integer getIdIncidente() {
    return idIncidente;
  }


  public void setIdIncidente(Integer idIncidente) {
    this.idIncidente = idIncidente;
  }


  public Incidente fechaCreacion(OffsetDateTime fechaCreacion) {
    
    this.fechaCreacion = fechaCreacion;
    return this;
  }

   /**
   * Get fechaCreacion
   * @return fechaCreacion
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getFechaCreacion() {
    return fechaCreacion;
  }


  public void setFechaCreacion(OffsetDateTime fechaCreacion) {
    this.fechaCreacion = fechaCreacion;
  }


  public Incidente fechaFinalizacion(OffsetDateTime fechaFinalizacion) {
    
    this.fechaFinalizacion = fechaFinalizacion;
    return this;
  }

   /**
   * Get fechaFinalizacion
   * @return fechaFinalizacion
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getFechaFinalizacion() {
    return fechaFinalizacion;
  }


  public void setFechaFinalizacion(OffsetDateTime fechaFinalizacion) {
    this.fechaFinalizacion = fechaFinalizacion;
  }


  public Incidente alertante(String alertante) {
    
    this.alertante = alertante;
    return this;
  }

   /**
   * Get alertante
   * @return alertante
  **/
  @javax.annotation.Nullable

  public String getAlertante() {
    return alertante;
  }


  public void setAlertante(String alertante) {
    this.alertante = alertante;
  }


  public Incidente alias(String alias) {
    
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @javax.annotation.Nullable

  public String getAlias() {
    return alias;
  }


  public void setAlias(String alias) {
    this.alias = alias;
  }


  public Incidente localizacionDescripcion(String localizacionDescripcion) {
    
    this.localizacionDescripcion = localizacionDescripcion;
    return this;
  }

   /**
   * Get localizacionDescripcion
   * @return localizacionDescripcion
  **/
  @javax.annotation.Nullable

  public String getLocalizacionDescripcion() {
    return localizacionDescripcion;
  }


  public void setLocalizacionDescripcion(String localizacionDescripcion) {
    this.localizacionDescripcion = localizacionDescripcion;
  }


  public Incidente localizacionLongitud(String localizacionLongitud) {
    
    this.localizacionLongitud = localizacionLongitud;
    return this;
  }

   /**
   * Get localizacionLongitud
   * @return localizacionLongitud
  **/
  @javax.annotation.Nullable

  public String getLocalizacionLongitud() {
    return localizacionLongitud;
  }


  public void setLocalizacionLongitud(String localizacionLongitud) {
    this.localizacionLongitud = localizacionLongitud;
  }


  public Incidente localizacionLatitud(String localizacionLatitud) {
    
    this.localizacionLatitud = localizacionLatitud;
    return this;
  }

   /**
   * Get localizacionLatitud
   * @return localizacionLatitud
  **/
  @javax.annotation.Nullable

  public String getLocalizacionLatitud() {
    return localizacionLatitud;
  }


  public void setLocalizacionLatitud(String localizacionLatitud) {
    this.localizacionLatitud = localizacionLatitud;
  }


  public Incidente observaciones(List<Observacion> observaciones) {
    
    this.observaciones = observaciones;
    return this;
  }

  public Incidente addObservacionesItem(Observacion observacionesItem) {
    if (this.observaciones == null) {
      this.observaciones = new ArrayList<>();
    }
    this.observaciones.add(observacionesItem);
    return this;
  }

   /**
   * Get observaciones
   * @return observaciones
  **/
  @javax.annotation.Nullable

  public List<Observacion> getObservaciones() {
    return observaciones;
  }


  public void setObservaciones(List<Observacion> observaciones) {
    this.observaciones = observaciones;
  }


  public Incidente personaAfectada(IncidentePersonaAfectada personaAfectada) {
    
    this.personaAfectada = personaAfectada;
    return this;
  }

   /**
   * Get personaAfectada
   * @return personaAfectada
  **/
  @javax.annotation.Nullable

  public IncidentePersonaAfectada getPersonaAfectada() {
    return personaAfectada;
  }


  public void setPersonaAfectada(IncidentePersonaAfectada personaAfectada) {
    this.personaAfectada = personaAfectada;
  }


  public Incidente plantillaRecursos(List<TipoRecurso> plantillaRecursos) {
    
    this.plantillaRecursos = plantillaRecursos;
    return this;
  }

  public Incidente addPlantillaRecursosItem(TipoRecurso plantillaRecursosItem) {
    if (this.plantillaRecursos == null) {
      this.plantillaRecursos = new ArrayList<>();
    }
    this.plantillaRecursos.add(plantillaRecursosItem);
    return this;
  }

   /**
   * Get plantillaRecursos
   * @return plantillaRecursos
  **/
  @javax.annotation.Nullable

  public List<TipoRecurso> getPlantillaRecursos() {
    return plantillaRecursos;
  }


  public void setPlantillaRecursos(List<TipoRecurso> plantillaRecursos) {
    this.plantillaRecursos = plantillaRecursos;
  }


  public Incidente recursos(List<Recurso> recursos) {
    
    this.recursos = recursos;
    return this;
  }

  public Incidente addRecursosItem(Recurso recursosItem) {
    if (this.recursos == null) {
      this.recursos = new ArrayList<>();
    }
    this.recursos.add(recursosItem);
    return this;
  }

   /**
   * Get recursos
   * @return recursos
  **/
  @javax.annotation.Nullable

  public List<Recurso> getRecursos() {
    return recursos;
  }


  public void setRecursos(List<Recurso> recursos) {
    this.recursos = recursos;
  }


  public Incidente clasificacionIncidente(ClasificacionIncidente clasificacionIncidente) {
    
    this.clasificacionIncidente = clasificacionIncidente;
    return this;
  }

   /**
   * Get clasificacionIncidente
   * @return clasificacionIncidente
  **/
  @javax.annotation.Nullable

  public ClasificacionIncidente getClasificacionIncidente() {
    return clasificacionIncidente;
  }


  public void setClasificacionIncidente(ClasificacionIncidente clasificacionIncidente) {
    this.clasificacionIncidente = clasificacionIncidente;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Incidente incidente = (Incidente) o;
    return Objects.equals(this.idIncidente, incidente.idIncidente) &&
        Objects.equals(this.fechaCreacion, incidente.fechaCreacion) &&
        Objects.equals(this.fechaFinalizacion, incidente.fechaFinalizacion) &&
        Objects.equals(this.alertante, incidente.alertante) &&
        Objects.equals(this.alias, incidente.alias) &&
        Objects.equals(this.localizacionDescripcion, incidente.localizacionDescripcion) &&
        Objects.equals(this.localizacionLongitud, incidente.localizacionLongitud) &&
        Objects.equals(this.localizacionLatitud, incidente.localizacionLatitud) &&
        Objects.equals(this.observaciones, incidente.observaciones) &&
        Objects.equals(this.personaAfectada, incidente.personaAfectada) &&
        Objects.equals(this.plantillaRecursos, incidente.plantillaRecursos) &&
        Objects.equals(this.recursos, incidente.recursos) &&
        Objects.equals(this.clasificacionIncidente, incidente.clasificacionIncidente);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idIncidente, fechaCreacion, fechaFinalizacion, alertante, alias, localizacionDescripcion, localizacionLongitud, localizacionLatitud, observaciones, personaAfectada, plantillaRecursos, recursos, clasificacionIncidente);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Incidente {\n");
    sb.append("    idIncidente: ").append(toIndentedString(idIncidente)).append("\n");
    sb.append("    fechaCreacion: ").append(toIndentedString(fechaCreacion)).append("\n");
    sb.append("    fechaFinalizacion: ").append(toIndentedString(fechaFinalizacion)).append("\n");
    sb.append("    alertante: ").append(toIndentedString(alertante)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    localizacionDescripcion: ").append(toIndentedString(localizacionDescripcion)).append("\n");
    sb.append("    localizacionLongitud: ").append(toIndentedString(localizacionLongitud)).append("\n");
    sb.append("    localizacionLatitud: ").append(toIndentedString(localizacionLatitud)).append("\n");
    sb.append("    observaciones: ").append(toIndentedString(observaciones)).append("\n");
    sb.append("    personaAfectada: ").append(toIndentedString(personaAfectada)).append("\n");
    sb.append("    plantillaRecursos: ").append(toIndentedString(plantillaRecursos)).append("\n");
    sb.append("    recursos: ").append(toIndentedString(recursos)).append("\n");
    sb.append("    clasificacionIncidente: ").append(toIndentedString(clasificacionIncidente)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("idIncidente");
    openapiFields.add("fechaCreacion");
    openapiFields.add("fechaFinalizacion");
    openapiFields.add("alertante");
    openapiFields.add("alias");
    openapiFields.add("localizacionDescripcion");
    openapiFields.add("localizacionLongitud");
    openapiFields.add("localizacionLatitud");
    openapiFields.add("observaciones");
    openapiFields.add("personaAfectada");
    openapiFields.add("plantillaRecursos");
    openapiFields.add("recursos");
    openapiFields.add("clasificacionIncidente");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Incidente
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Incidente.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Incidente is not found in the empty JSON string", Incidente.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Incidente.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Incidente` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("alertante") != null && !jsonObj.get("alertante").isJsonNull()) && !jsonObj.get("alertante").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alertante` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alertante").toString()));
      }
      if ((jsonObj.get("alias") != null && !jsonObj.get("alias").isJsonNull()) && !jsonObj.get("alias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alias").toString()));
      }
      if ((jsonObj.get("localizacionDescripcion") != null && !jsonObj.get("localizacionDescripcion").isJsonNull()) && !jsonObj.get("localizacionDescripcion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localizacionDescripcion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localizacionDescripcion").toString()));
      }
      if ((jsonObj.get("localizacionLongitud") != null && !jsonObj.get("localizacionLongitud").isJsonNull()) && !jsonObj.get("localizacionLongitud").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localizacionLongitud` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localizacionLongitud").toString()));
      }
      if ((jsonObj.get("localizacionLatitud") != null && !jsonObj.get("localizacionLatitud").isJsonNull()) && !jsonObj.get("localizacionLatitud").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localizacionLatitud` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localizacionLatitud").toString()));
      }
      if (jsonObj.get("observaciones") != null && !jsonObj.get("observaciones").isJsonNull()) {
        JsonArray jsonArrayobservaciones = jsonObj.getAsJsonArray("observaciones");
        if (jsonArrayobservaciones != null) {
          // ensure the json data is an array
          if (!jsonObj.get("observaciones").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `observaciones` to be an array in the JSON string but got `%s`", jsonObj.get("observaciones").toString()));
          }

          // validate the optional field `observaciones` (array)
          for (int i = 0; i < jsonArrayobservaciones.size(); i++) {
            Observacion.validateJsonObject(jsonArrayobservaciones.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `personaAfectada`
      if (jsonObj.get("personaAfectada") != null && !jsonObj.get("personaAfectada").isJsonNull()) {
        IncidentePersonaAfectada.validateJsonObject(jsonObj.getAsJsonObject("personaAfectada"));
      }
      if (jsonObj.get("plantillaRecursos") != null && !jsonObj.get("plantillaRecursos").isJsonNull()) {
        JsonArray jsonArrayplantillaRecursos = jsonObj.getAsJsonArray("plantillaRecursos");
        if (jsonArrayplantillaRecursos != null) {
          // ensure the json data is an array
          if (!jsonObj.get("plantillaRecursos").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `plantillaRecursos` to be an array in the JSON string but got `%s`", jsonObj.get("plantillaRecursos").toString()));
          }

          // validate the optional field `plantillaRecursos` (array)
          for (int i = 0; i < jsonArrayplantillaRecursos.size(); i++) {
            TipoRecurso.validateJsonObject(jsonArrayplantillaRecursos.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("recursos") != null && !jsonObj.get("recursos").isJsonNull()) {
        JsonArray jsonArrayrecursos = jsonObj.getAsJsonArray("recursos");
        if (jsonArrayrecursos != null) {
          // ensure the json data is an array
          if (!jsonObj.get("recursos").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `recursos` to be an array in the JSON string but got `%s`", jsonObj.get("recursos").toString()));
          }

          // validate the optional field `recursos` (array)
          for (int i = 0; i < jsonArrayrecursos.size(); i++) {
            Recurso.validateJsonObject(jsonArrayrecursos.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `clasificacionIncidente`
      if (jsonObj.get("clasificacionIncidente") != null && !jsonObj.get("clasificacionIncidente").isJsonNull()) {
        ClasificacionIncidente.validateJsonObject(jsonObj.getAsJsonObject("clasificacionIncidente"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Incidente.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Incidente' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Incidente> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Incidente.class));

       return (TypeAdapter<T>) new TypeAdapter<Incidente>() {
           @Override
           public void write(JsonWriter out, Incidente value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Incidente read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Incidente given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Incidente
  * @throws IOException if the JSON string is invalid with respect to Incidente
  */
  public static Incidente fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Incidente.class);
  }

 /**
  * Convert an instance of Incidente to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

